import paramiko
from fpdf import FPDF
import os
import json
import getpass

def create_ssh_client(server_ip, server_port, user, password):
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    client.connect(server_ip, port=server_port, username=user, password=password)
    return client

def execute_command(ssh_client, command):
    stdin, stdout, stderr = ssh_client.exec_command(command)
    return stdout.read().decode()

def save_report(data, file_format, file_name, directory_path):
    """Generate a report from fetched data and save it to a specific location in the chosen format."""
    file_path = os.path.join(directory_path, file_name + '.' + file_format)
    os.makedirs(directory_path, exist_ok=True)
    if file_format == 'json':
        with open(file_path, 'w') as file:
            json.dump(data, file, indent=4)
    elif file_format == 'txt':
        with open(file_path, 'w') as file:
            for key, value in data.items():
                file.write(f"{key.upper()}:\n{value}\n\n")
    elif file_format == 'pdf':
        pdf = FPDF()
        pdf.add_page()
        pdf.set_font("Arial", 'B', 12)
        pdf.set_fill_color(224, 235, 255)
        column_width = 190

        for key, value in data.items():
            pdf.cell(column_width, 10, f"{key.upper()}:", 0, 1, 'L', 1)  # Header
            pdf.set_font("Arial", size=12)
            wrapped_text = value.replace('\n', ' ').replace('\r', '')  # Flatten text for wrapping
            pdf.multi_cell(column_width, 10, wrapped_text)
            pdf.ln(10)  # Extra space between sections

        pdf.output(file_path)

def run_footprinting():
    # User inputs for connection details
    server_ip = input("Enter the target VM's IP address: ")
    server_port = int(input("Enter the SSH port (default 22): ") or 22)
    user = input("Enter the username for the VM: ")
    password = getpass.getpass("Enter the password for the user: ")

    ssh_client = create_ssh_client(server_ip, server_port, user, password)

    # Gathering OS details, network configuration, and installed packages
    footprint_data = {
        'Operating System Information': execute_command(ssh_client, "cat /etc/os-release"),
        'Network Configuration': execute_command(ssh_client, "ip addr"),
        'Installed Packages': execute_command(ssh_client, "dpkg --list")
    }
    print("Footprinting data collected.")
    
    # Close SSH connection
    ssh_client.close()

    # Adding user input and save report section
    file_format = input("Enter the file format (txt, json, pdf): ").lower()
    if file_format not in ['txt', 'json', 'pdf']:
        print("Invalid format selected. Defaulting to txt.")
        file_format = 'txt'
    file_name = input("Enter the filename without extension: ")
    directory_path = input("Enter the directory path where you want to save the file: ")
    save_report(footprint_data, file_format, file_name, directory_path)

